{"version":3,"sources":["multiplayer.js"],"names":["resizeBoard","size","Math","floor","min","$window","width","height","$board","css","getMoveCoordinates","e","$target","$","target","bigCell","$bigCells","index","parent","smallCell","eq","find","currentPlayer","myUser","socket","emit","player","move","$bigCell","$smallCell","attr","activeCell","analyzeMove","length","changePlayer","board","boards","delta","victoryCheck","boardNumber","i","nCheck","j","abs","console","log","alert","color","addClass","window","io","connect","username","location","pathname","split","$display","$displayText","on","me","message","html","setTimeout","oMove","bind","resize"],"mappings":"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","file":"multiplayer.js","sourcesContent":["(function() {\n\t/*\n\t *\tINIT\n\t */\n\t//init vars\n\tvar currentPlayer = 1;\n\tvar myUser;\n\tvar color = 'red'; //render\n\tvar $board = $('.board');\n\tvar $bigCells = $board.find('.big-cell');\n\tvar $window = $(window);\n\tvar boards = [[[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0]];\n\tvar activeCell = -1;\n\tvar socket = io.connect('http://localhost:3000');\n\tvar username = location.pathname.split('/')[2];\n\tvar $display = $('.display');\n\tvar $displayText = $display.find('h1');\n\n\t//init functions\n\tresizeBoard();\n\tsocket.emit('username', username);\n\n\tsocket.on('gameStarted', function(me) {\n\t\tmyUser = me;\n\t\tvar message = (myUser === 1)? 'You are first player' : 'You are second player';\n\t\t$displayText.html(message);\n\t\t$display.css('display', 'inline-block');\n\t\tsetTimeout(function() {\n\t\t\t$display.css('display', 'none');\n\t\t}, 1000);\n\t});\n\tsocket.on('opponentMove', function(oMove) {\n\t\tconsole.log(oMove);\n\t\tmove(oMove.bigCell, oMove.smallCell, oMove.player);\n\t});\n\n\t//bindings\n\t$('.small-cell').bind('click', getMoveCoordinates);\n\t$window.resize(resizeBoard);\n\n\t//functions\n\tfunction resizeBoard () {\n\t\tvar size = Math.floor((Math.min($window.width(), $window.height()) - 30) / 9);\n\t\t$board.css('font-size', size);\n\t}\n\n\tfunction getMoveCoordinates (e) {\n\t\tvar $target = $(e.target);\n\t\tvar bigCell = $bigCells.index($target.parent());\n\t\tvar smallCell = $bigCells.eq(bigCell).find('.small-cell').index($target);\n\t\tif(currentPlayer == myUser) {\n\t\t\tsocket.emit('move', {bigCell: bigCell, smallCell: smallCell, player: myUser});\n\t\t\tmove(bigCell, smallCell, currentPlayer);\n\t\t}\n\t}\n\n\tfunction move (bigCell, smallCell, player) {\n\t\tvar $bigCell = $bigCells.eq(bigCell);\n\t\tvar $smallCell = $bigCell.find('.small-cell').eq(smallCell);\n\t\tif((typeof $smallCell.attr('data-player') === typeof undefined || $smallCell.attr('data-player') === false) && (activeCell === -1 || bigCell === activeCell)) { //add check also in otter form\n\t\t\t$smallCell.attr('data-player', currentPlayer); //render part\n\t\t\tanalyzeMove(bigCell, smallCell, player);\n\t\t\tactiveCell = ($bigCells.eq(smallCell).find('.small-cell[data-player=\"1\"], .small-cell[data-player=\"2\"]').length === 9)? -1 : smallCell;\n\t\t\t$board.attr('data-cell', activeCell); //render\n\t\t\tchangePlayer();\n\t\t}\n\t}\n\n\tfunction analyzeMove (bigCell, smallCell, player) {\n\t\tvar board = boards[bigCell];\n\t\tvar delta = (player === 1)? 1 : -1;\n\t\tswitch(smallCell) {\n\t\t\tcase 0:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak; \n\t\t\tcase 7:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tbreak;\n\t\t}\n\t\tboard[3] = victoryCheck(bigCell);\n\t\tboards[bigCell] = board;\n\t}\n\n\tfunction victoryCheck (boardNumber) {\n\t\tvar board = boards[boardNumber];\n\t\tif (board[3] === 0) {\n\t\t\tfor (var i = 0; i < 3; ++i) {\n\t\t\t\tvar nCheck = board[i];\n\t\t\t\tfor (var j = 0; j < nCheck.length; ++j) {\n\t\t\t\t\tif (Math.abs(nCheck[j]) === 3) {\n\t\t\t\t\t\tif (boardNumber !== 9) {\n\t\t\t\t\t\t\tconsole.log('whyy??');\n\t\t\t\t\t\t\tanalyzeMove(9, boardNumber, currentPlayer);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(color + \" won\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$bigCells.eq(boardNumber).addClass(color); //render\n\t\t\t\t\t\treturn currentPlayer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconsole.log(board[3]);\n\t\t\treturn board[3];\n\t\t}\n\t}\n\n\tfunction changePlayer () {\n\t\tcurrentPlayer = (currentPlayer === 1) ? 2 : 1;\n\t\tcolor = (color === 'red') ? 'blue' : 'red'; //render\n\t\t$board.attr('data-color', color); //render\n\t}\n})();"],"sourceRoot":"/source/"}