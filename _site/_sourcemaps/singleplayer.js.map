{"version":3,"sources":["singleplayer.js"],"names":["resizeBoard","size","Math","floor","min","$window","width","height","$board","css","getMoveCoordinates","e","$target","$","target","bigCell","$bigCells","index","parent","smallCell","eq","find","move","currentPlayer","player","$bigCell","$smallCell","attr","activeCell","analyzeMove","length","changePlayer","board","boards","delta","victoryCheck","boardNumber","i","nCheck","j","abs","console","log","alert","color","addClass","window","bind","resize"],"mappings":"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","file":"singleplayer.js","sourcesContent":["(function() {\n\t//init\n\tvar currentPlayer = 1;\n\tvar color = 'red'; //render\n\tvar $board = $('.board');\n\tvar $bigCells = $board.find('.big-cell');\n\tvar $window = $(window);\n\tvar boards = [[[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0], [[0, 0, 0],[0, 0, 0],[0, 0],0]];\n\tvar activeCell = -1;\n\tresizeBoard();\n\n\t//bindings\n\t$('.small-cell').bind('click', getMoveCoordinates);\n\t$window.resize(resizeBoard);\n\n\t//functions\n\tfunction resizeBoard () {\n\t\tvar size = Math.floor((Math.min($window.width(), $window.height()) - 30) / 9);\n\t\t$board.css('font-size', size);\n\t}\n\n\tfunction getMoveCoordinates (e) {\n\t\tvar $target = $(e.target);\n\t\tvar bigCell = $bigCells.index($target.parent());\n\t\tvar smallCell = $bigCells.eq(bigCell).find('.small-cell').index($target);\n\t\tmove(bigCell, smallCell, currentPlayer);\n\t}\n\n\tfunction move (bigCell, smallCell, player) {\n\t\tvar $bigCell = $bigCells.eq(bigCell);\n\t\tvar $smallCell = $bigCell.find('.small-cell').eq(smallCell);\n\t\tif((typeof $smallCell.attr('data-player') === typeof undefined || $smallCell.attr('data-player') === false) && (activeCell === -1 || bigCell === activeCell)) { //add check also in otter form\n\t\t\t$smallCell.attr('data-player', currentPlayer); //render part\n\t\t\tanalyzeMove(bigCell, smallCell, player);\n\t\t\tactiveCell = ($bigCells.eq(smallCell).find('.small-cell[data-player=\"1\"], .small-cell[data-player=\"2\"]').length === 9)? -1 : smallCell;\n\t\t\t$board.attr('data-cell', activeCell); //render\n\t\t\tchangePlayer();\n\t\t}\n\t}\n\n\tfunction analyzeMove (bigCell, smallCell, player) {\n\t\tvar board = boards[bigCell];\n\t\tvar delta = (player === 1)? 1 : -1;\n\t\tswitch(smallCell) {\n\t\t\tcase 0:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tboard[0][0] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tboard[0][1] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][0] += delta;\n\t\t\t\tboard[2][1] += delta;\n\t\t\t\tbreak; \n\t\t\tcase 7:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][1] += delta;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tboard[0][2] += delta;\n\t\t\t\tboard[1][2] += delta;\n\t\t\t\tboard[2][0] += delta;\n\t\t\t\tbreak;\n\t\t}\n\t\tboard[3] = victoryCheck(bigCell);\n\t\tboards[bigCell] = board;\n\t}\n\n\tfunction victoryCheck (boardNumber) {\n\t\tvar board = boards[boardNumber];\n\t\tif (board[3] === 0) {\n\t\t\tfor (var i = 0; i < 3; ++i) {\n\t\t\t\tvar nCheck = board[i];\n\t\t\t\tfor (var j = 0; j < nCheck.length; ++j) {\n\t\t\t\t\tif (Math.abs(nCheck[j]) === 3) {\n\t\t\t\t\t\tif (boardNumber !== 9) {\n\t\t\t\t\t\t\tconsole.log('whyy??');\n\t\t\t\t\t\t\tanalyzeMove(9, boardNumber, currentPlayer);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(color + \" won\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$bigCells.eq(boardNumber).addClass(color); //render\n\t\t\t\t\t\treturn currentPlayer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconsole.log(board[3]);\n\t\t\treturn board[3];\n\t\t}\n\t}\n\n\tfunction changePlayer () {\n\t\tcurrentPlayer = (currentPlayer === 1) ? 2 : 1;\n\t\tcolor = (color === 'red') ? 'blue' : 'red'; //render\n\t\t$board.attr('data-color', color); //render\n\t}\n})();"],"sourceRoot":"/source/"}